{"version":3,"sources":["components/Footer.js","constants/userConsts.js","constants/orderConsts.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Rating.js","components/Product.js","constants/productConsts.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductsCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","constants/cartConsts.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UsersListScreen.js","screens/UserEditScreen.js","screens/ProductsListScreen.js","screens/ProductEditScreen.js","screens/OrdersListScreen.js","App.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["Footer","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USERS_LIST_REQUEST","USERS_LIST_SUCCESS","USERS_LIST_FAIL","USERS_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_RESET","MY_ORDERS_LIST_REQUEST","MY_ORDERS_LIST_SUCCESS","MY_ORDERS_LIST_FAIL","MY_ORDERS_LIST_RESET","ORDERS_LIST_REQUEST","ORDERS_LIST_SUCCESS","ORDERS_LIST_FAIL","ORDERS_LIST_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","logout","dispatch","localStorage","removeItem","type","getUserDetails","id","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","message","response","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","Button","variant","Header","useDispatch","useSelector","state","Navbar","bg","expand","collapseOnSelect","to","Brand","Toggle","Collapse","render","Nav","Link","NavDropdown","title","Item","balance","onClick","isDeputy","isAdmin","Rating","text","color","style","defaultProps","prototype","PropTypes","number","isRequired","string","Product","product","Card","_id","Img","src","image","width","height","Body","Title","as","rating","numReviews","Text","price","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","ADD_REVIEW_REQUEST","ADD_REVIEW_SUCCESS","ADD_REVIEW_FAIL","ADD_REVIEW_RESET","TOP_PRODUCTS_REQUEST","TOP_PRODUCTS_SUCCESS","TOP_PRODUCTS_FAIL","listProducts","pageNumber","productDetails","Loader","Spinner","animation","role","margin","display","Message","children","Alert","Paginate","pages","page","Pagination","Array","keys","map","key","active","ProductCarousel","topProducts","loading","error","products","useEffect","Carousel","pause","indicators","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","charSet","content","HomeScreen","match","params","productList","ProductsCarousel","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","productDetailsState","createReviewState","createReview","reviewSuccess","success","reviewError","alert","ListGroup","countInStock","x","disabled","reviews","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","cartItem","rounded","reduce","acc","item","toFixed","FormContainer","xs","LoginScreen","email","password","loginInfo","setLoginInfo","redirect","changeHandler","required","RegisterScreen","confirmPassword","registerInfo","setRegisterInfo","userRegister","ProfileScreen","details","setDetails","userDetails","user","userUpdateProfile","myOrders","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","order","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","marginRight","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","itemsPrice","shippingPrice","taxPrice","orderCreate","index","createOrder","orderItems","OrderScreen","orderId","orderDetails","successPay","orderPay","orderDeliver","successDeliver","loadingDeliver","href","userId","payOrder","deliverOrder","UsersListScreen","usersList","users","deleteUser","class","delete","UserEditScreen","updateUserST","updateUser","updateLoading","updateError","ProductsListScreen","deleteProductSt","deleteProduct","deleteError","deleteLoading","createProductSt","createProduct","createSuccess","createError","createLoading","createdProduct","category","brand","ProductEditScreen","uploading","productInfo","setProductInfo","productDetailsSt","updateProductST","updateProduct","uploadFileHandler","file","files","formData","FormData","append","console","log","submitHandler","custom","OrdersListScreen","allOrders","App","path","component","exact","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","UserInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.60056b53.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Container,Row,Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; M.S.N\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            \r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USERS_LIST_REQUEST = 'USERS_LIST_REQUEST'\r\nexport const USERS_LIST_SUCCESS = 'USERS_LIST_SUCCESS'\r\nexport const USERS_LIST_FAIL = 'USERS_LIST_FAIL'\r\nexport const USERS_LIST_RESET = 'USERS_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_RESET = 'ORDER_RESET'\r\n\r\nexport const MY_ORDERS_LIST_REQUEST = 'MY_ORDERS_LIST_REQUEST'\r\nexport const MY_ORDERS_LIST_SUCCESS = 'MY_ORDERS_LIST_SUCCESS'\r\nexport const MY_ORDERS_LIST_FAIL = 'MY_ORDERS_LIST_FAIL'\r\nexport const MY_ORDERS_LIST_RESET = 'MY_ORDERS_LIST_RESET'\r\n\r\nexport const ORDERS_LIST_REQUEST = 'ORDERS_LIST_REQUEST'\r\nexport const ORDERS_LIST_SUCCESS = 'ORDERS_LIST_SUCCESS'\r\nexport const ORDERS_LIST_FAIL = 'ORDERS_LIST_FAIL'\r\nexport const ORDERS_LIST_RESET = 'ORDERS_LIST_RESET'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import {\r\n  USERS_LIST_FAIL,\r\n  USERS_LIST_REQUEST,\r\n    USERS_LIST_RESET,\r\n    USERS_LIST_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_RESET,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS\r\n} from '../constants/userConsts'\r\nimport { MY_ORDERS_LIST_RESET } from '../constants/orderConsts'\r\nimport axios from 'axios'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo')\r\n  localStorage.removeItem('cartItems')\r\n  localStorage.removeItem('paymentMethod')\r\n  localStorage.removeItem('shippingAddress')\r\n  dispatch({ type: USER_DETAILS_RESET })\r\n  dispatch({ type: MY_ORDERS_LIST_RESET })\r\n  dispatch({ type: USERS_LIST_RESET })\r\n  dispatch({ type: USER_LOGOUT })\r\n\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    })\r\n    localStorage.setItem('userInfo', JSON.stringify(data))\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USERS_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/users`, config)\r\n\r\n    dispatch({\r\n      type: USERS_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USERS_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteUserById = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.delete(`/api/users/${id}`, config)\r\n\r\n    dispatch({\r\n      type: USER_DELETE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`,user, config)\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form id='search-form' onSubmit={submitHandler} inline='true' className='flex-row'>\r\n        <Form.Control\r\n            inline\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search Products...'\r\n            className='mr-sm-2 ml-sm-5'\r\n        ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2' inline>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import React from 'react'\r\nimport {\r\n    Container,\r\n    Nav,\r\n    Navbar,\r\n    NavDropdown\r\n} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout } from '../actions/userActions';\r\nimport { Route } from 'react-router';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        //TODO:update info in navbar\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n                <Container className=\"px-0\">\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand >MERN E-Commerce</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Route render={({ history }) => <SearchBox history={history} />} />\r\n                        <Nav className=\"ms-auto\">\r\n                            <LinkContainer to='/cart'>\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-shopping-cart\"></i> Cart\r\n                                </Nav.Link>\r\n                            </LinkContainer>\r\n                            {userInfo ?\r\n                                (\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <LinkContainer to='/profile'>\r\n                                            <NavDropdown.Item>\r\n                                                Profile\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                            <NavDropdown.Item>\r\n                                               Your Balance : ${userInfo.balance}\r\n                                            </NavDropdown.Item>\r\n                                        \r\n                                            <NavDropdown.Item onClick={logoutHandler}>\r\n                                                Logout\r\n                                            </NavDropdown.Item>\r\n                                        \r\n                                    </NavDropdown>\r\n                                )\r\n                                :\r\n                                \r\n                                    <LinkContainer to='/login'>\r\n                                <Nav.Link>\r\n                                    <i className=\"fas fa-user\"></i> Sign In\r\n                                </Nav.Link>\r\n                                    </LinkContainer>\r\n                                    \r\n                            }\r\n                            {\r\n                                userInfo && userInfo.isDeputy &&\r\n                                (\r\n                                    <NavDropdown title='Deputy' id='deputyMenu'>\r\n                                        <LinkContainer to='/deputy/addbalance'>\r\n                                            <NavDropdown.Item>\r\n                                                Add Balance\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>                                     \r\n                                    </NavDropdown>\r\n                                )\r\n                            }\r\n                            {\r\n                                userInfo && userInfo.isAdmin &&\r\n                                (\r\n                                    <NavDropdown title='Admin' id='adminMenu'>\r\n                                        <LinkContainer to='/admin/users'>\r\n                                            <NavDropdown.Item>\r\n                                                Users\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                        <LinkContainer to='/admin/products'>\r\n                                            <NavDropdown.Item>\r\n                                                Products\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>\r\n                                         <LinkContainer to='/admin/orders'>\r\n                                            <NavDropdown.Item>\r\n                                                Orders\r\n                                            </NavDropdown.Item>\r\n                                        </LinkContainer>                                        \r\n                                    </NavDropdown>\r\n                                )\r\n                            }\r\n                                \r\n                    </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({value,text,color}) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }}\r\n                    className={\r\n                    value >= 1\r\n                        ? 'fas fa-star'\r\n                        : value >= 0.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{ color }}\r\n                    className={\r\n                    value >= 2\r\n                        ? 'fas fa-star'\r\n                        : value >= 1.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{ color }}\r\n                    className={\r\n                    value >= 3\r\n                        ? 'fas fa-star'\r\n                        : value >= 2.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{ color }}\r\n                    className={\r\n                    value >= 4\r\n                        ? 'fas fa-star'\r\n                        : value >= 3.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i  style={{ color }}\r\n                    className={\r\n                    value >= 5\r\n                        ? 'fas fa-star'\r\n                        : value >= 4.5\r\n                        ? 'fas fa-star-half-alt'\r\n                        : 'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span> {text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color:'#f8e825'\r\n}\r\n\r\nRating.prototype = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string,\r\n    color:PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n\r\n","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({product}) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' width='100' height='225'/>\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/product/${product._id}`}>\r\n                    <Card.Title as='div' >\r\n                        <strong>{product.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                />\r\n                <Card.Text as='h3'>\r\n                    ${product.price}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\n\r\nexport const ADD_REVIEW_REQUEST = 'ADD_REVIEW_REQUEST'\r\nexport const ADD_REVIEW_SUCCESS = 'ADD_REVIEW_SUCCESS'\r\nexport const ADD_REVIEW_FAIL = 'ADD_REVIEW_FAIL'\r\nexport const ADD_REVIEW_RESET = 'ADD_REVIEW_RESET'\r\n\r\nexport const TOP_PRODUCTS_REQUEST = 'TOP_PRODUCTS_REQUEST'\r\nexport const TOP_PRODUCTS_SUCCESS = 'TOP_PRODUCTS_SUCCESS'\r\nexport const TOP_PRODUCTS_FAIL = 'TOP_PRODUCTS_FAIL'","import {\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAIL,\r\n    TOP_PRODUCTS_REQUEST,\r\n    TOP_PRODUCTS_SUCCESS,\r\n    TOP_PRODUCTS_FAIL\r\n} from '../constants/productConsts'\r\nimport axios from 'axios'\r\n\r\nexport const listProducts = (keyword ='',pageNumber = '') => async (dispatch)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_REQUEST\r\n        })\r\n\r\n        const { data } =\r\n            await axios\r\n                .get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const  productDetails = (id) => async (dispatch)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_REQUEST\r\n        })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const  deleteProduct= (id) => async (dispatch,getState)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n         await axios.delete(`/api/products/${id}`,config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createProduct= () => async (dispatch,getState)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {},config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const updateProduct= (product) => async (dispatch,getState)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`,\r\n            product,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const createReview = (productId,review) => async (dispatch,getState)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: ADD_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization:`Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products/${productId}/reviews`,\r\n            review,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ADD_REVIEW_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADD_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport const getTopProducts = () => async (dispatch)=> {\r\n    try {\r\n\r\n        dispatch({\r\n            type: TOP_PRODUCTS_REQUEST\r\n        })\r\n\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: TOP_PRODUCTS_SUCCESS,\r\n            payload:data\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: TOP_PRODUCTS_FAIL,\r\n            payload: error.response && error.response.data.message \r\n                ? error.response.data.message \r\n                : error.message\r\n        })\r\n\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block'\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n            \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\nconst Message = ({variant,children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant:'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({pages , page, isAdmin=false , keyword =''}) => {\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((key => (\r\n                <LinkContainer\r\n                    key={key + 1}\r\n                    to={\r\n                        !isAdmin?\r\n                        keyword ? `/search/${keyword}/page/${key + 1}` : `/page/${key + 1}`: `/admin/products/${key + 1}`\r\n                    }\r\n                >\r\n                    <Pagination.Item active={key+1 === page}>\r\n                        {key+1}\r\n                    </Pagination.Item>\r\n                </LinkContainer>\r\n                )))}\r\n        </Pagination>\r\n    )\r\n    \r\n}\r\n\r\nexport default Paginate\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { getTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const topProducts = useSelector((state) => state.topProducts)\r\n  const { loading, error, products } = topProducts\r\n\r\n  useEffect(() => {\r\n    dispatch(getTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark' indicators='true' variant='light'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n                  <Carousel.Caption  className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({title, description,keywords}) => {\r\n    return (\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            <meta name='description' content={description} />\r\n            <meta name='keywords' content={keywords} />\r\n            <title>{title}</title>    \r\n        </Helmet> \r\n    )\r\n}\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to the shop',\r\n    keywords: 'mobiles,electronics,shop,shipping,headphones',\r\n    description:'e-shop for selling electronic stuff for good prices!'\r\n}\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Row,Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductsCarousel from '../components/ProductsCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nconst HomeScreen = ({match}) => {\r\n\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList)\r\n    const {\r\n        loading,\r\n        error,\r\n        products,\r\n        pages,\r\n        page\r\n    } = productList\r\n\r\n    useEffect(() => {\r\n       dispatch(listProducts(keyword,pageNumber))\r\n    }, [dispatch,keyword ,pageNumber])\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n            {!keyword ? <ProductsCarousel /> : <Link to='/' className='btn btn-light'>\r\n                Go Back\r\n            </Link>}\r\n            <h1>Latest Products</h1>\r\n\r\n            {\r\n                loading\r\n                ? <Loader />\r\n                : error\r\n                ? <Message variant ='danger'> {error}</Message>\r\n                :<>\r\n                    <Row>\r\n                        {products.map((product) => {\r\n                            return (\r\n                                <Col sm={12} md={6} lg={4} xl={3}>\r\n                                    <Product product={product} key={product._id} />\r\n                                </Col>\r\n                            )\r\n                            \r\n                        })}\r\n                            \r\n                            </Row>\r\n                            <Paginate pages={pages} page={page} keyword={keyword? keyword :''} />\r\n                </>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Card, Col, Form, ListGroup, Row } from 'react-bootstrap'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Rating from '../components/Rating'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { productDetails, createReview } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { ADD_REVIEW_RESET} from '../constants/productConsts'\r\n\r\n\r\nconst ProductScreen = ({ history,match }) => {\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetailsState = useSelector(state => state.productDetails)\r\n\r\n    const {\r\n        loading,\r\n        error,\r\n        product } = productDetailsState\r\n    \r\n    const createReviewState = useSelector(state => state.createReview)\r\n    const {\r\n        success:reviewSuccess,\r\n        error:reviewError,\r\n    } = createReviewState\r\n    \r\n    const userLoginState = useSelector(state => state.userLogin)\r\n    const {\r\n        userInfo\r\n         } = userLoginState\r\n    \r\n\r\n    useEffect(() => {\r\n        \r\n        if (reviewSuccess) {\r\n            alert('Review Submited!')\r\n            setComment('')\r\n            setRating(0)\r\n            dispatch({ type: ADD_REVIEW_RESET })\r\n        }\r\n        dispatch(productDetails(match.params.id))\r\n\r\n    }, [match.params.id, dispatch, reviewSuccess])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createReview(match.params.id,{rating,comment}))\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n            {\r\n                loading\r\n                    ? <Loader />\r\n                    : error\r\n                        ? <Message variant='danger'> {error}</Message>\r\n                        : <>\r\n                            <Row>\r\n                <Col md={6}>\r\n                    <Image src={product.image} alt={product.name} fluid />\r\n                </Col>\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating\r\n                                value={product.rating}\r\n                                text={`${product.numReviews} reviews`}\r\n                            />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Description: {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    \r\n                </Col>\r\n                <Col md={3}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row className='py-2'>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row className='py-2'>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0\r\n                                            ? 'In Stock'\r\n                                            : 'Out of Stock'\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                                {\r\n                                    product.countInStock > 0 &&\r\n                                        (<ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    Qty \r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Control as='select'\r\n                                                        value={qty}\r\n                                                        onChange={\r\n                                                            (e) => setQty(e.target.value)\r\n                                                        }>\r\n                                                            {[...Array(product.countInStock).keys()].map(x => (\r\n                                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                            )\r\n                                                                \r\n                                                            )}\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>)\r\n                                        }\r\n                                        \r\n                            <ListGroup.Item>\r\n                                            <Button\r\n                                                onClick={addToCartHandler}\r\n                                                className='btn-with-full-width btn-block' type='button'\r\n                                disabled={product.countInStock === 0}>\r\n                                    Add To Cart\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col md={6}>\r\n                    <h2>Reviews</h2>     \r\n                                    {product.reviews.length === 0 && <Message>No Reviews Yet!</Message>}\r\n                                    <ListGroup variant='flush'>\r\n                                        {product.reviews.map((review) => \r\n                                            (<ListGroup.Item key={review.id}>\r\n                                                <strong>{review.name}</strong>\r\n                                                <Rating value={review.rating} />\r\n                                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                                            <p>{review.comment}</p>\r\n                                            </ListGroup.Item>)\r\n                                        )}\r\n                                        <ListGroup.Item>\r\n                                            <h2>Write a Customer Review</h2>\r\n                                            {reviewError && <Message variant='danger'>{reviewError}</Message>}\r\n                                            {userInfo ?\r\n                                                <Form onSubmit={submitHandler}>\r\n                                                    <Form.Group controlId='rating'>\r\n                                                        <Form.Label>Rating</Form.Label>\r\n                                                        <Form.Control\r\n                                                            as='select'\r\n                                                            value={rating}\r\n                                                            onChange={(e)=>setRating(e.target.value)}\r\n                                                        >\r\n                                                            <option value=''>Select...</option>\r\n                                                            <option value='1'>1 - Poor </option>\r\n                                                            <option value='2'>2 - Fair</option>\r\n                                                            <option value='3'>3 - Good</option>\r\n                                                            <option value='4'>4 - Very Good</option>\r\n                                                            <option value='5'>5 - Excellent</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                    <Form.Group controlId='comment'>\r\n                                                        <Form.Label>\r\n                                                           Comment \r\n                                                        </Form.Label>\r\n                                                    </Form.Group>\r\n                                                    <Form.Control\r\n                                                        as='textarea'\r\n                                                        row='3'\r\n                                                        value={comment}\r\n                                                        onChange={(e)=>setComment(e.target.value)}\r\n                                                    >\r\n                                                    </Form.Control>\r\n                                                    <Button type='submit' variant='primary'>\r\n                                                        Submit\r\n                                                    </Button>\r\n                                                </Form>\r\n                                                :\r\n                                                <Message>Please <Link to='/login'>Sign in</Link>to write a review</Message>}\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n                </Col>\r\n            </Row>\r\n\r\n            </>\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_RESET ='CART_RESET'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD ='CART_SAVE_PAYMENT_METHOD'","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_SAVE_SHIPPING_ADDRESS\r\n} from '../constants/cartConsts'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id ,qty) => async (dispatch,getState)=> {\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n    \r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id ) => async (dispatch,getState)=> {\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems',JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => async (dispatch)=> {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress',JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => async (dispatch)=> {\r\n\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod',JSON.stringify(data))\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Card, Col, Form, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { addToCart,removeFromCart } from '../actions/cartActions'\r\nimport Message from '../components/Message'\r\nimport { ORDER_RESET } from '../constants/orderConsts'\r\n\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    \r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    const { cartItems } = cart\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (productId) {\r\n            dispatch(addToCart(productId,qty))\r\n        }\r\n    }, [dispatch, qty, productId,history,userInfo])\r\n    \r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n        dispatch({type:ORDER_RESET})\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                <br />\r\n            \r\n                {cartItems.length === 0\r\n                    ? <Message> Your cart is empty <Link to='/'>Go Back</Link></Message>\r\n                    : (\r\n                        <ListGroup variant='flush'>\r\n                            {cartItems.map((cartItem) => (\r\n                                <ListGroup.Item key={cartItem.product}>\r\n                                    <Row>\r\n                                        <Col md={2}>\r\n                                            <Image\r\n                                                src={cartItem.image}\r\n                                                alt={cartItem.name}\r\n                                                fluid\r\n                                                rounded />\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Link to={`/product/${cartItem.product}`}>\r\n                                                {cartItem.name}\r\n                                            </Link>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            ${cartItem.price}\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Form.Control as='select'\r\n                                                            value={cartItem.qty}\r\n                                                            onChange={\r\n                                                                (e) => dispatch(addToCart(\r\n                                                                    cartItem.product,\r\n                                                                    Number(e.target.value)))\r\n                                                            }>\r\n                                                                {[...Array(cartItem.countInStock).keys()].map(x => (\r\n                                                                    <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                                                )\r\n                                                                    \r\n                                                                )}\r\n                                                    </Form.Control>\r\n                                        </Col>\r\n                                        <Col md={2}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() =>\r\n                                                    removeFromCartHandler(cartItem.product)\r\n                                                }\r\n                                            >\r\n                                                <i className=\"fas fa-trash\"></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                    ))}\r\n                        </ListGroup>\r\n                    )\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h2>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price,0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className=\"btn-block btn-with-full-width\"\r\n                                disabled={cartItems.length === 0}\r\n                                onClick={checkoutHandler}\r\n                            >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst LoginScreen = ({location,history}) => {\r\n\r\n    const [loginInfo, setLoginInfo] = useState({email:'',password:''})\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading , error, userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n\r\n    },[history,userInfo,redirect])\r\n\r\n    const changeHandler = (e) => {\r\n        setLoginInfo({...loginInfo,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(loginInfo.email,loginInfo.password))\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        name='email'\r\n                        onChange={changeHandler}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        name='password'\r\n                        onChange={changeHandler}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link\r\n                        to={redirect\r\n                            ? `/register?redirect=${redirect}`\r\n                            : '/register'\r\n                        }\r\n                    >Sign Up Here!</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nconst RegisterScreen = ({location,history}) => {\r\n\r\n    const [registerInfo, setRegisterInfo] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        message: null\r\n    })\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading , error, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n\r\n    },[history,userInfo,redirect])\r\n\r\n    const changeHandler = (e) => {\r\n        setRegisterInfo({...registerInfo,message:null})\r\n        setRegisterInfo({...registerInfo,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (registerInfo.password === registerInfo.confirmPassword) {\r\n            dispatch(register(\r\n            registerInfo.name,\r\n            registerInfo.email,\r\n            registerInfo.password\r\n        ))\r\n        } else {\r\n            setRegisterInfo({...registerInfo,message:'Check your entered passwords!'})\r\n        }\r\n        \r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {error\r\n                && <Message variant='danger'>{error}</Message>}\r\n            \r\n            {registerInfo.message\r\n                && <Message variant='danger'>{registerInfo.message}</Message>}\r\n            \r\n            {loading && <Loader />}\r\n            \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        name='name'\r\n                        onChange={changeHandler}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        name='email'\r\n                        onChange={changeHandler}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        name='password'\r\n                        onChange={changeHandler}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='ReEnter password'\r\n                        name='confirmPassword'\r\n                        onChange={changeHandler}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Already Got An Account? <Link\r\n                        to={redirect\r\n                            ? `/login?redirect=${redirect}`\r\n                            : '/login'\r\n                        }\r\n                    >Sign In Here!</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Col, Form, Row, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { updateUserProfile } from '../actions/userActions'\r\nimport { getMyOrdersList } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConsts'\r\n\r\nconst ProfileScreen = ({history}) => {\r\n\r\n    const [details, setDetails] = useState({\r\n        name: '',\r\n        email: '',\r\n        password:'',\r\n        confirmPassword:'',\r\n        message: null\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector((state) => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const myOrders = useSelector((state) => state.myOrders)\r\n    const { loading: loadingOrders, error: errorOrders, orders } = myOrders\r\n    \r\n    useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n        dispatch(getUserDetails('profile'))\r\n        dispatch(getMyOrdersList())\r\n      } else {\r\n        setDetails({\r\n                    ...details,\r\n                    name: user.name,\r\n                    email:user.email\r\n                })\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n    // useEffect(() => {\r\n        \r\n    //     if (!userInfo) {\r\n    //         history.push('/login')\r\n    //     } else {\r\n    //         if (!user || !user.name || success) {\r\n    //         dispatch(getUserDetails('profile'))\r\n    //         dispatch(getMyOrdersList())\r\n    //     } else {\r\n    //             setDetails({\r\n    //                 ...details,\r\n    //                 name: user.name,\r\n    //                 email:user.email\r\n    //             })\r\n    //     }\r\n    //     }\r\n    // }, [dispatch, history, user])\r\n    \r\n    const changeHandler = (e) => {\r\n        setDetails({\r\n            ...details,\r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (details.password !== details.confirmPassword) {\r\n        setDetails({...details,message:'Passwords do not match'})\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                id: user._id,\r\n                name:details.name,\r\n                email:details.email,\r\n                password:details.password,\r\n            }))\r\n             setDetails({...details,message:''})\r\n        }\r\n    }\r\n        \r\n\r\n    \r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n            {error\r\n                    && <Message variant='danger'>{error}</Message>}\r\n            {success\r\n                    && <Message variant='success'>Profile Updated!</Message>}\r\n            {details.message\r\n                    && <Message variant='danger'>{details.message}</Message>}\r\n            \r\n            {loading && <Loader />}\r\n            \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                            type='text'\r\n                            value={details.name}\r\n                        placeholder='Enter name'\r\n                        name='name'\r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                        <Form.Control\r\n                            value={details.email}\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        name='email'\r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>\r\n                        Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        name='password'\r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>\r\n                        Confirm Password\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='ReEnter password'\r\n                        name='confirmPassword'\r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                    {loadingOrders ?\r\n                        <Loader /> :\r\n                        errorOrders ?\r\n                        <Message variant='danger'>{errorOrders}</Message> :\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    orders.map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0,10)}</td>\r\n                                            <td>{order.totalPrice}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.isPaid\r\n                                                        ?order.paidAt.substring(0, 10)\r\n                                                        :<i\r\n                                                            className=\"fas fa-times\"\r\n                                                            style={{color:'red'}}\r\n                                                        ></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    order.isDelivered\r\n                                                        ?order.deliveredAt.substring(0, 10)\r\n                                                        :<i\r\n                                                            className=\"fas fa-times\"\r\n                                                            style={{color:'red'}}\r\n                                                        ></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <Button\r\n                                                    className='btn-sm'\r\n                                                    onClick={() => {\r\n                                                        history.push(`/order/${order._id}`)\r\n                                                    }}\r\n                                                >\r\n                                                    Details\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                    </Table>\r\n                    }\r\n            </Col>\r\n        </Row>\r\n    )\r\n            }\r\n\r\nexport default ProfileScreen\r\n","import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_RESET,\r\n  MY_ORDERS_LIST_FAIL,\r\n  MY_ORDERS_LIST_REQUEST,\r\n  MY_ORDERS_LIST_SUCCESS,\r\n  ORDERS_LIST_REQUEST,\r\n  ORDERS_LIST_SUCCESS,\r\n  ORDERS_LIST_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL\r\n} from '../constants/orderConsts'\r\nimport {\r\n  CART_RESET\r\n} from '../constants/cartConsts'\r\nimport axios from 'axios'\r\nimport { logout } from './userActions'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n\r\n    //reset the current order\r\n    dispatch({type:ORDER_RESET})\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n      const { data } = await axios.post(\r\n          `/api/orders`,\r\n          order,\r\n          config\r\n      )\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    //TODO:reset the cart and success status by a new const and reducer/dispatch\r\n      dispatch({type:CART_RESET})\r\n      localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    \r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/${id}`,\r\n          config\r\n      )\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const payOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    \r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type':'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        {userId:userInfo._id},\r\n          config\r\n      )\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getMyOrdersList = () => async (dispatch, getState) => {\r\n  try {\r\n\r\n    dispatch({\r\n      type: MY_ORDERS_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders/myorders`,\r\n          config\r\n      )\r\n\r\n    dispatch({\r\n      type: MY_ORDERS_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: MY_ORDERS_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\nexport const getAllOrdersList = () => async (dispatch, getState) => {\r\n  try {\r\n\r\n    dispatch({\r\n      type: ORDERS_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n      const { data } = await axios.get(\r\n          `/api/orders`,\r\n          config\r\n      )\r\n\r\n    dispatch({\r\n      type: ORDERS_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDERS_LIST_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (orderId) => async (dispatch, getState) => {\r\n\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized!,token is not valid!') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({step1,step2,step3,step4}) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item style={{marginRight:'1.5rem'}}>\r\n                {step1\r\n                    ?(\r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link>\r\n                                Sign In\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Nav.Link disabled>\r\n                                Sign In\r\n                        </Nav.Link>\r\n                        \r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item style={{marginRight:'1.5rem'}}>\r\n                {step2\r\n                    ?(\r\n                        <LinkContainer to='/shipping'>\r\n                            <Nav.Link>\r\n                                Shipping\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Nav.Link disabled>\r\n                                Shipping\r\n                        </Nav.Link>\r\n                        \r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item style={{marginRight:'1.5rem'}}>\r\n                {step3\r\n                    ?(\r\n                        <LinkContainer to='/payment'>\r\n                            <Nav.Link>\r\n                               Payment\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Nav.Link disabled>\r\n                               Payment\r\n                        </Nav.Link>\r\n                        \r\n                    )\r\n                }\r\n            </Nav.Item>\r\n\r\n            <Nav.Item style={{marginRight:'1.5rem'}}>\r\n                {step4\r\n                    ?(\r\n                        <LinkContainer to='/placeorder'>\r\n                            <Nav.Link>\r\n                               Place Order\r\n                            </Nav.Link>\r\n                        </LinkContainer>\r\n                    )\r\n                    :\r\n                    (\r\n                        <Nav.Link disabled>\r\n                               Place Order\r\n                        </Nav.Link>\r\n                        \r\n                    )\r\n                }\r\n            </Nav.Item>\r\n        </Nav>\r\n        \r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address )\r\n    const [city, setCity] = useState(shippingAddress.city )\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode )\r\n    const [country, setCountry] = useState(shippingAddress.country )\r\n\r\n    \r\n    \r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            address,\r\n            city,\r\n            postalCode,\r\n            country\r\n        }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        value={address}\r\n                        type='text'\r\n                        placeholder='Enter Address'\r\n                        onChange={(e)=>setAddress(e.target.value)}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>\r\n                        City\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        value={city}\r\n                        type='text'\r\n                        placeholder='Enter City'\r\n                        onChange={(e)=>setCity(e.target.value)}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>\r\n                        Postal Code\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        value={postalCode}\r\n                        type='text'\r\n                        placeholder='Enter Postal Code'\r\n                        onChange={(e)=>setPostalCode(e.target.value)}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='Country'>\r\n                    <Form.Label>\r\n                        Country\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        value={country}\r\n                        type='text'\r\n                        placeholder='Enter Country'\r\n                        onChange={(e) => {\r\n                            setCountry(e.target.value)\r\n                        }}\r\n                        required\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Button, Col, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport FormContainer from '../components/FormContainer'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    \r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                \r\n                    <Col>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='PayPal'\r\n                            id='PayPal'\r\n                            name='paymentMethod'\r\n                            value='PayPal'\r\n                            disabled\r\n                            onChange={(e)=>{setPaymentMethod(e.target.value)}}\r\n                        >\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Stripe'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='Stripe'\r\n                            disabled\r\n                            onChange={(e)=>{setPaymentMethod(e.target.value)}}\r\n                        >\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='My Balance'\r\n                            id='Stripe'\r\n                            name='paymentMethod'\r\n                            value='MyBalance'\r\n                            checked\r\n                            onChange={(e)=>{setPaymentMethod(e.target.value)}}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport Message from '../components/Message'\r\n\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    \r\n    \r\n    const cart = useSelector(state => state.cart)\r\n    const {\r\n        shippingAddress,\r\n        paymentMethod,\r\n        cartItems,\r\n    } = cart\r\n\r\n    //  calculate prices\r\n    cart.itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    \r\n    cart.shippingPrice = cart.itemsPrice > 100 ? 0 : 100\r\n\r\n    cart.taxPrice = Number((0.15*cart.itemsPrice).toFixed(2))\r\n    \r\n    cart.totalPrice= Number(cart.itemsPrice + cart.shippingPrice + cart.taxPrice).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [success, history,userInfo])\r\n\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems:cartItems,\r\n            shippingAddress: shippingAddress,\r\n            paymentMethod: paymentMethod,\r\n            itemsPrice:cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice,\r\n            \r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {shippingAddress.address},\r\n                                {shippingAddress.city},\r\n                                {shippingAddress.postalCode},\r\n                                {shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method:</strong>\r\n                            {paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cartItems.length === 0 ?\r\n                                <Message>Your cart is empty!</Message> :\r\n                                (\r\n                                    <ListGroup variant='flush'>\r\n                                        {cartItems.map((item, index) => \r\n                                            \r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n                                                    <Col >\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                                    </Col>\r\n                                                    \r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )\r\n                                        }\r\n                                    </ListGroup>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button\r\n                                type='button'\r\n                                className='btn-block btn-with-full-width'\r\n                                disabled={cartItems === 0}\r\n                                onClick={placeOrderHandler}\r\n                                >\r\n                                PLACE ORDER\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { Button, Card, Col, Image, ListGroup, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { getOrderDetails, payOrder , deliverOrder } from '../actions/orderActions'\r\nimport { getUserDetails } from '../actions/userActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { ORDER_PAY_RESET,ORDER_DELIVER_RESET } from '../constants/orderConsts'\r\n\r\nconst OrderScreen = ({ match,history }) => {\r\n    \r\n    const orderId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { success: successDeliver, loading: loadingDeliver } = orderDeliver\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        dispatch(getOrderDetails(orderId))\r\n        //if we paid Successfully or not paid then re render\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch({type:ORDER_PAY_RESET})\r\n            dispatch({type:ORDER_DELIVER_RESET})\r\n        }\r\n        \r\n    }, [successPay, successDeliver, orderId, dispatch, userInfo])\r\n    \r\n    const paymentHandler = () => {\r\n        dispatch(payOrder(orderId))\r\n        dispatch(getUserDetails('profile'))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(orderId))\r\n        dispatch(getUserDetails('profile'))\r\n    }\r\n\r\n    //  calculate prices\r\n    if (!loading) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    }\r\n    \r\n    return loading ?\r\n        <Loader /> :\r\n        error ?\r\n            <Message variant='danger'>{error}</Message> :\r\n            <>\r\n                <h1>Order {order._id}</h1>\r\n                <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <strong>Name:</strong>{order.user.name}\r\n                            <br />\r\n                            <strong>Email:</strong>\r\n                            <a href={`mailto:${order.user.email}`}>\r\n                                {order.user.email}  \r\n                            </a>  \r\n                            <p>\r\n                                <strong>Address:</strong>\r\n                                {order.shippingAddress.address},\r\n                                {order.shippingAddress.city},\r\n                                {order.shippingAddress.postalCode},\r\n                                {order.shippingAddress.country}\r\n\r\n                                \r\n                                {order.isDelivered ?\r\n                                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                                    :\r\n                                    <Message variant='danger'>Not Delivered</Message>\r\n                                }   \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method:</strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n\r\n                                {order.isPaid ?\r\n                                    <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    :\r\n                                    <Message variant='danger'>Not Paid</Message>\r\n                                }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ?\r\n                                <Message>Order is empty!</Message> :\r\n                                (\r\n                                    <ListGroup variant='flush'>\r\n                                        {order.orderItems.map((item, index) => \r\n                                            \r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                        <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                    </Col>\r\n                                                    <Col >\r\n                                                        <Link to={`/product/${item.product}`}>\r\n                                                            {item.name}\r\n                                                        </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                                    </Col>\r\n                                                    \r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        )\r\n                                        }\r\n                                    </ListGroup>\r\n                                )\r\n                            }\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup.Item>\r\n                            <h2>Order Summary</h2>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${order.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${order.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${order.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${order.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                        {!order.isPaid &&\r\n                                <ListGroup.Item>\r\n                                \r\n                            <Button\r\n                                className='btn-with-full-width'\r\n                                onClick={paymentHandler}\r\n                            >\r\n                              Pay Order      \r\n                            </Button>\r\n                                </ListGroup.Item>}\r\n                            \r\n                            {loadingDeliver && <Loader />}\r\n                            \r\n                             {order.isPaid && !order.isDelivered && userInfo && userInfo.isAdmin &&\r\n                                <ListGroup.Item>\r\n                                \r\n                            <Button\r\n                                className='btn-with-full-width'\r\n                                onClick={deliverHandler}\r\n                            >\r\n                              Deliver Order      \r\n                            </Button>\r\n                                </ListGroup.Item>}\r\n                            \r\n                        \r\n                        \r\n                        \r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </>\r\n            \r\n}\r\n\r\nexport default OrderScreen\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from 'react'\r\nimport { Button, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteUserById, getUsers } from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst UsersListScreen = ({history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const usersList = useSelector(state => state.usersList)\r\n    const { users, error, loading } = usersList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const deleteUser = useSelector(state => state.deleteUser)\r\n    const { success } = deleteUser\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n             history.push('/login')\r\n        }\r\n    }, [history,userInfo])\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n           dispatch(getUsers()) \r\n        } else {\r\n            history.push('/login')\r\n        } \r\n    }, [dispatch, history , success])\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1>Users</h1>\r\n            {\r\n                loading?\r\n                    <Loader /> :\r\n                    error ?\r\n                        <Message variant='danger'>{error}</Message> :\r\n                        (\r\n                            <Table\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                responsive\r\n                                className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>EMAIL</th>\r\n                                    <th>ADMIN</th>\r\n                                    <th>DEPUTY</th>\r\n                                    <th>Balance</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users.map((user) => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>\r\n                                                <a href={`mailto:${user.email}`}>\r\n                                                    {user.email}\r\n                                                </a>\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.isAdmin\r\n                                                        ? <i class=\"fas fa-check\"\r\n                                                        style={{color:'lime'}}></i>\r\n                                                        :<i\r\n                                                            className=\"fas fa-times\"\r\n                                                            style={{color:'red'}}\r\n                                                        ></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.isDeputy\r\n                                                        ?<i class=\"fas fa-check\"\r\n                                                        style={{color:'lime'}}></i>\r\n                                                        :<i\r\n                                                            className=\"fas fa-times\"\r\n                                                            style={{color:'red'}}\r\n                                                        ></i>\r\n                                                }\r\n                                            </td>\r\n                                             <td>${user.balance}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                <Button\r\n                                                    variant='light'\r\n                                                    className='btn-sm'\r\n                                                >\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                    <Button\r\n                                                    variant='danger'\r\n                                                    className='btn-sm'\r\n                                                    onClick={()=>dispatch(deleteUserById(user._id))}\r\n                                                >\r\n                                                    <i className=\"fas fa-trash\"></i>\r\n                                                    </Button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                    </Table>\r\n                        )\r\n                    }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersListScreen\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getUserDetails, updateUser} from '../actions/userActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { USER_UPDATE_RESET } from '../constants/userConsts'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    \r\n    const userId = match.params.id\r\n\r\n    const [registerInfo, setRegisterInfo] = useState({\r\n        name: '',\r\n        email: '',\r\n        isAdmin: false,\r\n        isDeputy: false\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n    \r\n    const updateUserST = useSelector(state => state.updateUser)\r\n    const { loading:updateLoading , error:updateError, success } = updateUserST\r\n\r\n    useEffect(() => {\r\n        \r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if (success) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/users')\r\n        }else{if (!user.name || user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        } else {\r\n            setRegisterInfo({\r\n                ...registerInfo,\r\n                name: user.name,\r\n                email: user.email,\r\n                isAdmin: user.isAdmin,\r\n                isDeputy :user.isDeputy\r\n            })\r\n        }}\r\n        \r\n    },[dispatch, history, userId, userInfo,user,success])\r\n\r\n    const changeHandler = (e) => {\r\n        setRegisterInfo({...registerInfo,message:null})\r\n        setRegisterInfo({...registerInfo,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({\r\n            _id: userId,\r\n            name: registerInfo.name || user.name,\r\n            email: registerInfo.email || user.email,\r\n            isAdmin: registerInfo.isAdmin,\r\n            isDeputy: registerInfo.isDeputy ,\r\n            \r\n        }))        \r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/users' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {updateLoading && <Loader/>}\r\n                {updateError && <Message variant='danger'>{updateError}</Message>}\r\n            {loading ? <Loader /> : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    :(<Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        name='name'\r\n                        value={registerInfo.name}       \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>\r\n                        Email\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        name='email'\r\n                        value={registerInfo.email}    \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                        \r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                            type='checkbox'\r\n                            label='is Admin'\r\n                            name='isAdmin'\r\n                            checked={registerInfo.isAdmin}\r\n                            onChange={\r\n                                (e) => {\r\n                                    setRegisterInfo({ ...registerInfo, isAdmin: e.target.checked })\r\n                                }}\r\n                            \r\n                        >\r\n                        </Form.Check>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isdeputy'>\r\n                        <Form.Check\r\n                            type='checkbox'\r\n                            label='is Deputy'\r\n                            name='isDeputy'\r\n                            checked={registerInfo.isDeputy}    \r\n                            onChange={\r\n                                (e) => {\r\n                                    setRegisterInfo({ ...registerInfo, isDeputy: e.target.checked })\r\n                                }}\r\n                            \r\n                        >\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n                \r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                    variant='primary'\r\n                >\r\n                   Update\r\n                </Button>\r\n            </Form>)\r\n            }\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Col, Row, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createProduct, deleteProduct, listProducts } from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConsts'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductsListScreen = ({ history, match }) => {\r\n    \r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { products, error, loading,pages,page } = productList\r\n\r\n    const deleteProductSt = useSelector(state => state.deleteProduct)\r\n    const { success, error: deleteError, loading: deleteLoading } = deleteProductSt\r\n    \r\n    const createProductSt = useSelector(state => state.createProduct)\r\n    const { success:createSuccess, error:createError, loading:createLoading,product:createdProduct } = createProductSt\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        if (!userInfo.isAdmin) {\r\n             history.push('/login')\r\n        }\r\n        if (createSuccess) {\r\n            history.push(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('',pageNumber))\r\n        }\r\n    }, [dispatch, history, userInfo, success, createSuccess ,createdProduct,pageNumber])\r\n\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n    \r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center justifiy-content-between'>\r\n                <Col>\r\n                    <h1>Products</h1>\r\n                </Col>\r\n                <Col md={3} className='text-right'>   \r\n                 \r\n                    <Button className='my-3 text-right' onClick={createProductHandler}>\r\n                        <i className='fas fa-plus'></i> Create Product\r\n                    </Button>\r\n                </Col> \r\n            </Row>\r\n            {createLoading && <Loader />}\r\n            {createError && <Message variant='danger'>{createError}</Message>}\r\n            {deleteLoading && <Loader />}\r\n            {deleteError && <Message variant='danger'>{deleteError}</Message>}\r\n            {\r\n                loading?\r\n                    <Loader /> :\r\n                    error ?\r\n                        <Message variant='danger'>{error}</Message> :\r\n                        (\r\n                            <>\r\n                            <Table\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                responsive\r\n                                className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>NAME</th>\r\n                                    <th>PRICE</th>\r\n                                    <th>CATEGORY</th>\r\n                                    <th>BRAND</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    products.map((product) => (\r\n                                        <tr key={product._id}>\r\n                                            <td>{product._id}</td>\r\n                                            <td>{product.name}</td>\r\n                                            <td>${product.price}</td>\r\n                                            <td>{product.category}</td>\r\n                                            <td>{product.brand}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                <Button\r\n                                                    variant='light'\r\n                                                    className='btn-sm'\r\n                                                >\r\n                                                    <i className=\"fas fa-edit\"></i>\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                    <Button\r\n                                                    variant='danger'\r\n                                                    className='btn-sm'\r\n                                                    onClick={()=>dispatch(deleteProduct(product._id))}\r\n                                                >\r\n                                                    <i className=\"fas fa-trash\"></i>\r\n                                                    </Button>\r\n                                                \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                                </Table>\r\n                                <Paginate page={page} pages={pages} isAdmin={true} />\r\n                                </>\r\n                        )\r\n                    }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductsListScreen\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { productDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConsts'\r\nimport axios from 'axios'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    \r\n    const productId = match.params.id\r\n\r\n    const [productInfo, setProductInfo] = useState({\r\n        name: '',\r\n        price: 0,\r\n        brand: '',\r\n        category: '',\r\n        description: '',\r\n        countInStock: '',\r\n        numReviews: 0,\r\n        image: '',\r\n        uploading:false\r\n\r\n    })\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const productDetailsSt = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetailsSt\r\n    \r\n    const updateProductST = useSelector(state => state.updateProduct)\r\n    const { loading:updateLoading , error:updateError, success } = updateProductST\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/products')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n            dispatch(productDetails(productId))\r\n        } else {\r\n            setProductInfo({\r\n                ...productInfo,\r\n                name: product.name,\r\n                price: product.price,\r\n                brand: product.brand,\r\n                category: product.category,\r\n                description: product.description,\r\n                countInStock: product.countInStock,\r\n                image: product.image,\r\n                numReviews: product.numReviews,\r\n                uploading:false\r\n            })\r\n        }\r\n        }\r\n        \r\n        \r\n    },[dispatch, history, productId, userInfo,product,success])\r\n\r\n    const changeHandler = (e) => {\r\n        setProductInfo({...productInfo,message:null})\r\n        setProductInfo({...productInfo,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    const uploadFileHandler = async(e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setProductInfo({ ...productInfo, uploading: true })\r\n       try {\r\n        const config = {\r\n            headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            console.log(data);\r\n            setProductInfo({...productInfo,image:data,uploading:false})\r\n        \r\n        } catch (error) {\r\n            console.error(error)\r\n            setProductInfo({...productInfo,uploading:false})\r\n        }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id:productId,\r\n            name: productInfo.name,\r\n            price: productInfo.price,\r\n            description: productInfo.description,\r\n            image: productInfo.image,\r\n            category: productInfo.category,\r\n            brand: productInfo.brand,\r\n            countInStock: productInfo.countInStock,\r\n            numReviews:productInfo.numReviews\r\n        }))        \r\n\r\n    }\r\n    return (\r\n        <>\r\n            <Link to='/admin/products' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n            {updateLoading && <Loader/>}\r\n                {updateError && <Message variant='danger'>{updateError}</Message>}\r\n            {loading ? <Loader /> : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (<Form onSubmit={submitHandler}>\r\n                        \r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        name='name'\r\n                        value={productInfo.name}       \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='price'>\r\n                    <Form.Label>\r\n                        Price\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter price'\r\n                        name='price'\r\n                        value={productInfo.price}    \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                    </Form.Group>\r\n                        \r\n                    <Form.Group controlId='image'>\r\n                        <Form.Label>\r\n                            Image \r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            type='text'\r\n                            placeholder='Enter image url'\r\n                            name='image'\r\n                            value={productInfo.image}       \r\n                            onChange={changeHandler}\r\n                            \r\n                        >\r\n                        </Form.Control>\r\n                            <Form.Control\r\n                                id='image-file'\r\n                                label='choose file'\r\n                                type=\"file\"\r\n                                custom\r\n                                onChange={uploadFileHandler}\r\n                            >\r\n                            </Form.Control>\r\n                            {productInfo.uploading && <Loader />}\r\n                    </Form.Group>\r\n                <Form.Group controlId='brand'>\r\n                    <Form.Label>\r\n                        Brand\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter brand'\r\n                        name='brand'\r\n                        value={productInfo.brand}       \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                    <Form.Group controlId='countInStock'>\r\n                    <Form.Label>\r\n                        Count in stock\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='number'\r\n                        placeholder='Enter countInStock'\r\n                        name='countInStock'\r\n                        value={productInfo.countInStock}       \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId='category'>\r\n                    <Form.Label>\r\n                        Category\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter category'\r\n                        name='category'\r\n                        value={productInfo.category}       \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                        </Form.Group>\r\n                        \r\n                        <Form.Group controlId='description'>\r\n                    <Form.Label>\r\n                        Description\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter description'\r\n                        name='description'\r\n                        value={productInfo.description}       \r\n                        onChange={changeHandler}\r\n                        \r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <br />\r\n                <Button\r\n                    type='submit'\r\n                            variant='primary'\r\n                    onClick={submitHandler}\r\n                >\r\n                   Update\r\n                </Button>\r\n            </Form>)\r\n            }\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Button, Col, Row, Table } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConsts'\r\nimport { getAllOrdersList } from '../actions/orderActions'\r\n\r\nconst OrdersListScreen = ({history,match}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const allOrders = useSelector(state => state.allOrders)\r\n    const { loading, orders ,error} = allOrders\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n        if (!userInfo.isAdmin) {\r\n             history.push('/login')\r\n        }\r\n         else {\r\n            dispatch(getAllOrdersList())\r\n        }\r\n    }, [dispatch, history, userInfo])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center justifiy-content-between'>\r\n                <Col>\r\n                    <h1>Orders</h1>\r\n                </Col>\r\n            </Row>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {\r\n                loading?\r\n                    <Loader /> :\r\n                    error ?\r\n                        <Message variant='danger'>{error}</Message> :\r\n                        (\r\n                            <Table\r\n                                striped\r\n                                bordered\r\n                                hover\r\n                                responsive\r\n                                className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>USER</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    orders.map((order) => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.user.name}</td>\r\n                                            <td>{order.createdAt.substring(0,10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{\r\n                                                order.isPaid ?\r\n                                                    order.paidAt.substring(0,10)\r\n                                                    :\r\n                                                    <i\r\n                                                        className=\"fas fa-times\"\r\n                                                        style={{color:'red'}}\r\n                                                    ></i>\r\n                                            }</td>\r\n                                            <td>{\r\n                                                order.isDelivered ?\r\n                                                    order.deliveredAt.substring(0,10)\r\n                                                    :\r\n                                                    <i\r\n                                                        className=\"fas fa-times\"\r\n                                                        style={{color:'red'}}\r\n                                                    ></i>\r\n                                            }</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button\r\n                                                    variant='light'\r\n                                                    className='btn-sm'\r\n                                                >\r\n                                                    Details\r\n                                                    </Button>\r\n                                                </LinkContainer>   \r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                    </Table>\r\n                        )\r\n                    }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrdersListScreen\r\n","import React from 'react'\nimport Footer from './components/Footer';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport './index.css';\nimport HomeScreen from './screens/HomeScreen';\nimport {\n  BrowserRouter as Router,\n  Route\n} from 'react-router-dom';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UsersListScreen from './screens/UsersListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductsListScreen from './screens/ProductsListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrdersListScreen from './screens/OrdersListScreen';\n\n\n\n\nconst App =()=> {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route exact path='/page/:pageNumber' component={HomeScreen} />\n          <Route exact path='/search/:keyword/page/:pageNumber' component={HomeScreen} />\n          <Route exact path='/' component={HomeScreen} />\n          <Route exact path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/order/:id' component={OrderScreen} />\n          \n\n          {/* admin routes */}\n          <Route path='/admin/users' component={UsersListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          <Route exact path='/admin/products' component={ProductsListScreen} />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route exact path='/admin/products/:pageNumber' component={ProductsListScreen} />\n\n          <Route path='/admin/orders' component={OrdersListScreen} />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    createProductReducer,\r\n    createReviewReducer,\r\n    deleteProductReducer,\r\n    productDetailsReducer,\r\n    productListReducer,\r\n    topProductsReducer,\r\n    updateProductReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    deleteUserReducer,\r\n    updateUserReducer,\r\n    userDetailsReducer,\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    usersListReducer,\r\n    userUpdateProfileReducer\r\n} from './reducers/userReducers'\r\nimport { allOrdersReducer, myOrdersReducer, orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderPayReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList : productListReducer,\r\n    productDetails : productDetailsReducer,\r\n    cart : cartReducer,\r\n    userLogin : userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    myOrders: myOrdersReducer,\r\n    usersList: usersListReducer,\r\n    deleteUser: deleteUserReducer,\r\n    updateUser: updateUserReducer,\r\n    deleteProduct: deleteProductReducer,\r\n    createProduct: createProductReducer,\r\n    updateProduct: updateProductReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    createReview: createReviewReducer,\r\n    topProducts:topProductsReducer\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n    ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst UserInfoFromStorage = localStorage.getItem('userInfo')\r\n    ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst ShippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n    ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst PaymentMethodFromStorage = localStorage.getItem('paymentMethod')\r\n    ? JSON.parse(localStorage.getItem('paymentMethod')) : ''\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: ShippingAddressFromStorage,\r\n        paymentMethod:PaymentMethodFromStorage\r\n    },\r\n    userLogin: { userInfo: UserInfoFromStorage },\r\n    \r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\n\r\nexport default store","import {\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    ADD_REVIEW_REQUEST,\r\n    ADD_REVIEW_SUCCESS,\r\n    ADD_REVIEW_FAIL,\r\n    ADD_REVIEW_RESET,\r\n    TOP_PRODUCTS_REQUEST,\r\n    TOP_PRODUCTS_SUCCESS,\r\n    TOP_PRODUCTS_FAIL\r\n} from '../constants/productConsts'\r\n\r\n//ProductList reducer\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n     switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page\r\n            }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n \r\n//ProductDetails reducer\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n     switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const deleteProductReducer = (state = { }, action) => {\r\n     switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success:true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const createProductReducer = (state = { }, action) => {\r\n     switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success:true ,product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const updateProductReducer = (state = { product:{} }, action) => {\r\n     switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success:true ,product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product:{} }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const createReviewReducer = (state = { }, action) => {\r\n     switch (action.type) {\r\n        case ADD_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case ADD_REVIEW_SUCCESS:\r\n            return { loading: false, success:true }\r\n        case ADD_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ADD_REVIEW_RESET:\r\n            return {  }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const topProductsReducer = (state = { products: [] }, action) => {\r\n     switch (action.type) {\r\n        case TOP_PRODUCTS_REQUEST:\r\n            return { loading: true,products: []}\r\n        case TOP_PRODUCTS_SUCCESS:\r\n            return { loading: false, products:action.payload }\r\n        case TOP_PRODUCTS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n     }\r\n}","import {\r\n    CART_ADD_ITEM,\r\n    CART_REMOVE_ITEM,\r\n    CART_SAVE_SHIPPING_ADDRESS,\r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_RESET\r\n} from '../constants/cartConsts'\r\n\r\n//cart reducer\r\nexport const cartReducer = (state = {\r\n    cartItems: [],\r\n    shippingAddress: {},\r\n    paymentMethod: '',\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n            \r\n            //Note : product is id ,passed from cartActions in the payload\r\n            const existItem = state.cartItems.find(cartItem =>\r\n                cartItem.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(cartItem =>\r\n                        cartItem.product === existItem.product ? item : cartItem)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return { ...state,\r\n                cartItems: state.cartItems.filter(item => action.payload !== item.product)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return { ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return { ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_RESET:\r\n            return {\r\n                cartItems: [],\r\n                shippingAddress: {},\r\n                paymentMethod: '',\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST, \r\n  USER_UPDATE_PROFILE_RESET,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USERS_LIST_FAIL,\r\n  USERS_LIST_REQUEST,\r\n  USERS_LIST_SUCCESS,\r\n  USERS_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_RESET\r\n    \r\n } from '../constants/userConsts'\r\n\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_LOGIN_REQUEST:\r\n      return { loading: true }\r\n    case USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_REGISTER_REQUEST:\r\n      return { loading: true }\r\n    case USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }\r\n    case USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_LOGOUT:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload }\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true }\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload }\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const usersListReducer = (state = {users:[]}, action) => {\r\n  switch (action.type) {\r\n    case USERS_LIST_REQUEST:\r\n      return { loading: true }\r\n    case USERS_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload }\r\n    case USERS_LIST_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    case USERS_LIST_RESET:\r\n      return { users:[] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const deleteUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true }\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true }\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const updateUserReducer = (state = { user:{} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { ...state,loading: true }\r\n    case USER_UPDATE_SUCCESS:\r\n      return { ...state,loading: false, success: true, user: action.payload }\r\n    case USER_UPDATE_FAIL:\r\n      return { ...state,loading: false, error: action.payload }\r\n    case USER_UPDATE_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_RESET,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_RESET,\r\n    MY_ORDERS_LIST_FAIL,\r\n    MY_ORDERS_LIST_REQUEST,\r\n    MY_ORDERS_LIST_SUCCESS,\r\n    MY_ORDERS_LIST_RESET,\r\n    ORDERS_LIST_REQUEST,\r\n    ORDERS_LIST_SUCCESS,\r\n    ORDERS_LIST_FAIL,\r\n    ORDERS_LIST_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET\r\n} from '../constants/orderConsts'\r\n\r\n\r\nexport const orderCreateReducer = (state = { }, action) => {\r\n     switch (action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return { loading: true}\r\n        case ORDER_CREATE_SUCCESS:\r\n            return { loading: false, success: true , order: action.payload }\r\n        case ORDER_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case ORDER_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {\r\n    loading: true,\r\n    orderItems: [],\r\n    shippingAddress: {}\r\n}, action) => {\r\n     switch (action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return { ...state,loading: true}\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return { ...state,loading: false, order: action.payload }\r\n        case ORDER_DETAILS_FAIL:\r\n            return { ...state,loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n     }\r\n}\r\nexport const orderPayReducer = (state = { }, action) => {\r\n     switch (action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {loading: true}\r\n        case ORDER_PAY_SUCCESS:\r\n            return {loading: false, success: true }\r\n        case ORDER_PAY_FAIL:\r\n             return { loading: false, error: action.payload }\r\n         case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const myOrdersReducer = (state = {orders:[]}, action) => {\r\n     switch (action.type) {\r\n        case MY_ORDERS_LIST_REQUEST:\r\n            return {...state,loading: true}\r\n        case MY_ORDERS_LIST_SUCCESS:\r\n            return {...state,loading: false, orders: action.payload }\r\n        case MY_ORDERS_LIST_FAIL:\r\n             return { ...state, loading: false, error: action.payload }\r\n        case MY_ORDERS_LIST_RESET:\r\n            return { orders:[] }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const allOrdersReducer = (state = {orders:[]}, action) => {\r\n     switch (action.type) {\r\n        case ORDERS_LIST_REQUEST:\r\n            return {...state,loading: true}\r\n        case ORDERS_LIST_SUCCESS:\r\n            return {...state,loading: false, orders: action.payload }\r\n        case ORDERS_LIST_FAIL:\r\n             return { ...state, loading: false, error: action.payload }\r\n        case ORDERS_LIST_RESET:\r\n            return { orders:[] }\r\n        default:\r\n            return state\r\n     }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = { }, action) => {\r\n     switch (action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {loading: true}\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {loading: false, success: true }\r\n        case ORDER_DELIVER_FAIL:\r\n             return { loading: false, error: action.payload }\r\n         case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n     }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}